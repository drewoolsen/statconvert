cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is not significantly different from the given null hypothesis (M =",
test_obj$null.value[[1]], "), t(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
} else {
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][2], ", t(",
round(test_obj$parameter, 2), ") =", round(test_obj$statistic[[1]],2), ", p = ",
test_obj$p.value.text)
}
if(1 - test_obj$p.value < attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is  not significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][1], ", t(",
round(test_obj$parameter, 2), ") =", round(test_obj$statistic[[1]],2), ", p = ",
test_obj$p.value.text)
}
}
}
}
statconvert2(test1)
statconvert2(test2)
statconvert2(test3)
ttest_convert <- function(test_obj) {
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = as.character(round(test_objt$p.value), 3)
}
if(length(test_obj$estimate) == 1){
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is significantly different from the given null hypothesis (M =",
test_obj$null.value[[1]], "), t(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
if(1 - test_obj$p.value < attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is not significantly different from the given null hypothesis (M =",
test_obj$null.value[[1]], "), t(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
} else {
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][2], ", t(",
round(test_obj$parameter, 2), ") =", round(test_obj$statistic[[1]],2), ", p = ",
test_obj$p.value.text)
}
if(1 - test_obj$p.value < attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is  not significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][1], ", t(",
round(test_obj$parameter, 2), ") =", round(test_obj$statistic[[1]],2), ", p = ",
test_obj$p.value.text)
}
}
}
statconvert <- function(test_obj){
if(class(test_obj) == "htest"){
ttest_convert(test_obj)
}
}
test1 <- t.test(1:10)
statconvert(test1)
test1 <- t.test(1:10, y = 1:10)
statconvert(test1)
ttest_convert <- function(test_obj) {
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = as.character(round(test_obj$p.value), 3)
}
if(length(test_obj$estimate) == 1){
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is significantly different from the given null hypothesis (M =",
test_obj$null.value[[1]], "), t(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
if(1 - test_obj$p.value < attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is not significantly different from the given null hypothesis (M =",
test_obj$null.value[[1]], "), t(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
} else {
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][2], ", t(",
round(test_obj$parameter, 2), ") =", round(test_obj$statistic[[1]],2), ", p = ",
test_obj$p.value.text)
}
if(1 - test_obj$p.value < attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is  not significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][1], ", t(",
round(test_obj$parameter, 2), ") =", round(test_obj$statistic[[1]],2), ", p = ",
test_obj$p.value.text)
}
}
}
statconvert(test1)
cor.test(1:10, 4:14)
cor.test(1:10, 4:13)
data("mtcars")
cor.test(mtcars$mpg, mtcars$hp)
cor1 <- cor.test(mtcars$mpg, mtcars$hp)
class(cor1)
View(cor1)
View(test1)
test2 <- t.test(1:10)
View(test2)
test1 <- t.test(1:10, y = 1:10)
test2 <- t.test(1:10)
test3 <- t.test(1:10, y=7:20, paired = T)
test1 <- t.test(1:10, y = 1:10)
test2 <- t.test(1:10)
test3 <- t.test(1:10, y=7:16, paired = T)
test3 <- t.test(mtcars$mpg, mtcars$hp, paired = T)
test4 <- t.test(1:10, y=7:20, var.equal = T)
View(test4)
View(test3)
test1$method[1]
test2$method[1]
test3$method[1]
test4$method[1]
statconvert <- function(test_obj){
ttest_method = c("Welch Two Sample t-test", "One Sample t-test", "Paired t-test", " Two Sample t-test")
if(class(test_obj) == "htest" & test_obj$method[1] %in% ttest_method){
ttest_convert(test_obj)
}
}
statconvert(test1)
statconvert(cor1)
View(cor1)
cor1[["conf.int"]]
cor_convert <- function(test_obj){
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]) {
if(test_obj$estimate < 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(test_obj$data.name, split = " and ")[[1]][1], "and",
strsplit(test_obj$data.name, split = " and ")[[1]][2], "are strongly negatively correlated",
"r(", round(test_obj$parameter, 2), ") =",round(test_obj$statistic[[1]],2),
", p = ", test_obj$p.value.text)
}
}
}
cor_convert(cor1)
cor_convert <- function(test_obj){
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = as.character(round(test_obj$p.value), 3)
}
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]) {
if(test_obj$estimate < 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(test_obj$data.name, split = " and ")[[1]][1], "and",
strsplit(test_obj$data.name, split = " and ")[[1]][2], "are strongly negatively correlated",
"r(", round(test_obj$parameter, 2), ") =",round(test_obj$statistic[[1]],2),
", p = ", test_obj$p.value.text)
}
}
}
cor_convert(cor1)
strsplit(cor1, split = "\$([a-z].{2})", fixed = T)
strsplit(cor1, split = "$([a-z].{2})", fixed = T)
strsplit(cor1, split = "\\$([a-z].{2})", fixed = T)
strsplit(cor1$data.name, split = "\\$([a-z].{2})", fixed = T)
strsplit(cor1$data.name, split = "\$([a-z].{2})", fixed = T)
strsplit(cor1$data.name, split = "\\$([a-z].{2})", fixed = T)
strsplit(cor1$data.name, split = "$", fixed = T)
strsplit("cor1$data.name", split = "$")
strsplit("cor1$data.name", split = "\$")
strsplit("cor1$data.name", split = "\\$")
strsplit("cor1$data.name", split = "\\$")[[1]][2]
strsplit(strsplit(cor1$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2]
cor_convert <- function(test_obj){
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = as.character(round(test_obj$p.value), 3)
}
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]) {
if(test_obj$estimate < 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly negatively correlated","r(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
}
}
cor_convert(cor1)
cor_convert <- function(test_obj){
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = as.character(round(test_obj$p.value), 3)
}
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]) {
if(test_obj$estimate < 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly negatively correlated","r(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly positively correlated","r(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate < 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly negatively correlated","r(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly positively correlated","r(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
}
}
View(mtcars)
cor1 <- cor.test(mtcars$mpg, mtcars$qsec)
cor1
cor_convert(cor1)
cor1$estimate
1 - cor1$p.value
cor_convert <- function(test_obj){
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = as.character(round(test_obj$p.value), 3)
}
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]) {
if(test_obj$estimate < 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly negatively correlated","r(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly positively correlated","r(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate < 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly negatively correlated","r(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly positively correlated","r(", round(test_obj$parameter, 2), ") =",
round(test_obj$statistic[[1]],2),", p = ", test_obj$p.value.text)
}
}
}
cor1 <- cor.test(mtcars$mpg, mtcars$qsec)
cor_convert(cor1)
cor_convert <- function(test_obj){
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = as.character(round(test_obj$p.value), 3)
}
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]) {
if(test_obj$estimate < 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly negatively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly positively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate < 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly negatively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly positively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
}
}
cor_convert(cor1)
cor1$p.value
round(cor1$p.value, 3)
as.character(round(cor1$p.value), 3)
cor_convert <- function(test_obj){
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = round(test_obj$p.value, 3)
}
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]) {
if(test_obj$estimate < 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly negatively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly positively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate < 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly negatively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly positively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
}
}
cor_convert(cor1)
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = round(test_obj$p.value, 3)
}
ttest_convert <- function(test_obj) {
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = round(test_obj$p.value, 3)
}
if(length(test_obj$estimate) == 1){
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is significantly different from the given null hypothesis (M =",
test_obj$null.value[[1]], "), t(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(1 - test_obj$p.value < attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is not significantly different from the given null hypothesis (M =",
test_obj$null.value[[1]], "), t(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
} else {
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][2], ", t(",
round(test_obj$parameter, 3), ") =", round(test_obj$statistic[[1]],3), ", p = ",
test_obj$p.value.text)
}
if(1 - test_obj$p.value < attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is  not significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][1], ", t(",
round(test_obj$parameter, 3), ") =", round(test_obj$statistic[[1]],3), ", p = ",
test_obj$p.value.text)
}
}
}
cor_convert <- function(test_obj){
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = round(test_obj$p.value, 3)
}
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]) {
if(test_obj$estimate < 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly negatively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly positively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate < 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly negatively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly positively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
}
}
cor_convert(cor1)
data("mtcars")
cor1 <- cor.test(mtcars$mpg, mtcars$qsec)
cor1$method[1]
cor1 <- cor.test(mtcars$mpg, mtcars$qsec, method = "kendall")
cor1 <- cor.test(mtcars$mpg, mtcars$qsec, method = "spearman")
cor1 <- cor.test(mtcars$mpg, mtcars$qsec, method = "spearman", exact = F)
cor1$method[1]
cor1 <- cor.test(mtcars$mpg, mtcars$qsec, method = "kendall", exact = F)
cor1$method[1]
cor1 <- cor.test(mtcars$mpg, mtcars$qsec)
cor_convert <- function(test_obj){
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = round(test_obj$p.value, 3)
}
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]) {
if(test_obj$estimate < 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly negatively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) > .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are strongly positively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate < 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly negatively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(test_obj$estimate > 0 & abs(test_obj$estimate) < .5) {
cat(strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][1], split = "\\$")[[1]][2], "and",
strsplit(strsplit(test_obj$data.name, split = " and ")[[1]][2], split = "\\$")[[1]][2],
"are weakly positively correlated","r(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
}
}
statconvert <- function(test_obj){
ttest_method = c("Welch Two Sample t-test", "One Sample t-test", "Paired t-test", " Two Sample t-test")
cortest_method = c("Pearson's product-moment correlation","Spearman's rank correlation rho",
"Kendall's rank correlation tau")
if(class(test_obj) == "htest" & test_obj$method[1] %in% ttest_method){
ttest_convert(test_obj)
}
if(class(test_obj) == "htest" & test_obj$method[1] %in% cortest_method) {
cor_convert(test_obj)
}
}
ttest_convert <- function(test_obj) {
if(test_obj$p.value < .001) {
test_obj$p.value.text = "<.001"
} else {
test_obj$p.value.text = round(test_obj$p.value, 3)
}
if(length(test_obj$estimate) == 1){
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is significantly different from the given null hypothesis (M =",
test_obj$null.value[[1]], "), t(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
if(1 - test_obj$p.value < attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is not significantly different from the given null hypothesis (M =",
test_obj$null.value[[1]], "), t(", round(test_obj$parameter, 3), ") =",
round(test_obj$statistic[[1]],3),", p = ", test_obj$p.value.text)
}
} else {
if(1 - test_obj$p.value >= attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][2], ", t(",
round(test_obj$parameter, 3), ") =", round(test_obj$statistic[[1]],3), ", p = ",
test_obj$p.value.text)
}
if(1 - test_obj$p.value < attributes(test_obj$conf.int)$conf.level[1]){
cat("The mean of", strsplit(test_obj$data.name, split = " and ")[[1]][1],
"is  not significantly different from the mean of",
strsplit(test_obj$data.name, split = " and ")[[1]][1], ", t(",
round(test_obj$parameter, 3), ") =", round(test_obj$statistic[[1]],3), ", p = ",
test_obj$p.value.text)
}
}
}
data("mtcars")
cor1 <- cor.test(mtcars$mpg, mtcars$qsec)
test1 <- t.test(mtcars$mpg, mtcars$hp)
statconvert(test1)
statconvert(cor1)
